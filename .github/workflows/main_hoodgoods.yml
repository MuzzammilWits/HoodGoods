name: Build and deploy NestJS app to Azure Web App - HoodGoods

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'

      - name: Install dependencies and build
        run: |
          cd backend
          npm install
          npm run build --if-present
      
      - name: Zip artifact for deployment
        # This zips the entire backend directory except for unnecessary files for a lean package
        run: |
          cd backend
          zip -r ../release.zip . -x "node_modules/*" -x "src/*" -x "test/*" -x ".env" -x ".gitignore"

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    
    # This job specifically targets the Production environment
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app

      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_E8A3AE7C0A2B4EE8BB72DEB2CA04592E }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_A7942632F4AB432CB31F1660332BD653 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_8E4E0A05D52542C89C9AFDBA776942EB }}

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'HoodGoods'
          slot-name: 'Production'
          package: release.zip
          # These secrets are securely pulled from the 'Production' environment
          # and set as Application Settings on your Azure Web App.
          app-settings-json: |
            [
                { "name": "DB_HOST", "value": "${{ secrets.DB_HOST }}", "slotSetting": false },
                { "name": "DB_PORT", "value": "${{ secrets.DB_PORT }}", "slotSetting": false },
                { "name": "DB_USERNAME", "value": "${{ secrets.DB_USERNAME }}", "slotSetting": false },
                { "name": "DB_PASSWORD", "value": "${{ secrets.DB_PASSWORD }}", "slotSetting": false },
                { "name": "DB_DATABASE", "value": "${{ secrets.DB_DATABASE }}", "slotSetting": false },
                { "name": "AUTH0_DOMAIN", "value": "${{ secrets.AUTH0_DOMAIN }}", "slotSetting": false },
                { "name": "AUTH0_AUDIENCE", "value": "${{ secrets.AUTH0_AUDIENCE }}", "slotSetting": false },
                { "name": "YOCO_SECRET_KEY", "value": "${{ secrets.YOCO_SECRET_KEY }}", "slotSetting": false }
            ]
